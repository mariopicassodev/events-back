// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql" // or "mysql", "sqlite", etc.
    url      = env("DATABASE_URL")
}

model User {
    id           Int           @id @default(autoincrement())
    email        String        @unique
    name         String?
    events       Event[]       @relation("EventOwner")
    reservations Reservation[]
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
}

model Event {
    id           Int           @id @default(autoincrement())
    version      Int           @default(1)
    name         String
    description  String
    location     String?
    schedule     DateTime
    fee          Int
    maxCapacity  Int
    ownerId      Int
    owner        User          @relation("EventOwner", fields: [ownerId], references: [id])
    reservations Reservation[]
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
}

model Reservation {
    id        Int               @id @default(autoincrement())
    eventId   Int
    event     Event             @relation(fields: [eventId], references: [id])
    userId    Int
    user      User              @relation(fields: [userId], references: [id])
    status    ReservationStatus @default(PENDING)
    createdAt DateTime          @default(now())
    updatedAt DateTime          @updatedAt
}

enum ReservationStatus {
    PENDING
    ACCEPTED
    REJECTED
    CANCELLED
}
